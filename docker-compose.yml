version: '3'
services:

  db:
    container_name: ${CONTAINER_PREFIX}_db
    image: 'postgres:12'
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '5433:5432'

  nginx:
    image: nginx
    container_name: ${CONTAINER_PREFIX}_web_server
    ports:
      - 80:80
    volumes:
      - ./nginx.docker.conf:/etc/nginx/conf.d/default.conf
      - ./static:/var/www/static
    restart: unless-stopped
    depends_on:
      - app

  app:
    container_name: ${CONTAINER_PREFIX}_app
    build:
      context: .
      dockerfile: docker/AppDockerfile
    stdin_open: true
    tty: true
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./esports_app/esports:/app/esports
      - ./data:/app/data
    ports:
      - '8000:8000'
    depends_on:
      - rabbitmq
      - db

  publisher:
    container_name: ${CONTAINER_PREFIX}_publisher
    build:
      context: .
      dockerfile: docker/PubDockerfile
    stdin_open: true
    tty: true
    env_file:
      - .env
    volumes:
      - ./publisher:/app/publisher
      - ./data:/app/data
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq
    container_name: ${CONTAINER_PREFIX}_rabbitmq
    command: rabbitmq-server
    ports:
      - '5672:5672'
      - '15672:15672'
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1
